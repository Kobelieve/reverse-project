<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.b2b.item.dao.ProductTempMapper">
  <resultMap id="BaseResultMap" type="com.kobe.mybatis.model.ProductTemp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="producttypeid" jdbcType="INTEGER" property="producttypeid" />
    <result column="brandid" jdbcType="INTEGER" property="brandid" />
    <result column="productname" jdbcType="VARCHAR" property="productname" />
    <result column="marketprice" jdbcType="DOUBLE" property="marketprice" />
    <result column="salesprice" jdbcType="DOUBLE" property="salesprice" />
    <result column="stockupdate" jdbcType="INTEGER" property="stockupdate" />
    <result column="weight" jdbcType="DOUBLE" property="weight" />
    <result column="logoimg" jdbcType="VARCHAR" property="logoimg" />
    <result column="functiondesc" jdbcType="VARCHAR" property="functiondesc" />
    <result column="storenumber" jdbcType="INTEGER" property="storenumber" />
    <result column="measuringunitname" jdbcType="VARCHAR" property="measuringunitname" />
    <result column="manufacturermodel" jdbcType="VARCHAR" property="manufacturermodel" />
    <result column="fromId" jdbcType="INTEGER" property="fromid" />
    <result column="functiondescnew" jdbcType="VARCHAR" property="functiondescnew" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, producttypeid, brandid, productname, marketprice, salesprice, stockupdate, weight, 
    logoimg, functiondesc, storenumber, measuringunitname, manufacturermodel, fromId, 
    functiondescnew
  </sql>
  <select id="selectByExample" parameterType="com.kobe.mybatis.model.ProductTempExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_temp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_temp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_temp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kobe.mybatis.model.ProductTempExample">
    delete from product_temp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kobe.mybatis.model.ProductTemp">
    insert into product_temp (id, producttypeid, brandid, 
      productname, marketprice, salesprice, 
      stockupdate, weight, logoimg, 
      functiondesc, storenumber, measuringunitname, 
      manufacturermodel, fromId, functiondescnew
      )
    values (#{id,jdbcType=INTEGER}, #{producttypeid,jdbcType=INTEGER}, #{brandid,jdbcType=INTEGER}, 
      #{productname,jdbcType=VARCHAR}, #{marketprice,jdbcType=DOUBLE}, #{salesprice,jdbcType=DOUBLE}, 
      #{stockupdate,jdbcType=INTEGER}, #{weight,jdbcType=DOUBLE}, #{logoimg,jdbcType=VARCHAR}, 
      #{functiondesc,jdbcType=VARCHAR}, #{storenumber,jdbcType=INTEGER}, #{measuringunitname,jdbcType=VARCHAR}, 
      #{manufacturermodel,jdbcType=VARCHAR}, #{fromid,jdbcType=INTEGER}, #{functiondescnew,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kobe.mybatis.model.ProductTemp">
    insert into product_temp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="producttypeid != null">
        producttypeid,
      </if>
      <if test="brandid != null">
        brandid,
      </if>
      <if test="productname != null">
        productname,
      </if>
      <if test="marketprice != null">
        marketprice,
      </if>
      <if test="salesprice != null">
        salesprice,
      </if>
      <if test="stockupdate != null">
        stockupdate,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="logoimg != null">
        logoimg,
      </if>
      <if test="functiondesc != null">
        functiondesc,
      </if>
      <if test="storenumber != null">
        storenumber,
      </if>
      <if test="measuringunitname != null">
        measuringunitname,
      </if>
      <if test="manufacturermodel != null">
        manufacturermodel,
      </if>
      <if test="fromid != null">
        fromId,
      </if>
      <if test="functiondescnew != null">
        functiondescnew,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="producttypeid != null">
        #{producttypeid,jdbcType=INTEGER},
      </if>
      <if test="brandid != null">
        #{brandid,jdbcType=INTEGER},
      </if>
      <if test="productname != null">
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="marketprice != null">
        #{marketprice,jdbcType=DOUBLE},
      </if>
      <if test="salesprice != null">
        #{salesprice,jdbcType=DOUBLE},
      </if>
      <if test="stockupdate != null">
        #{stockupdate,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="logoimg != null">
        #{logoimg,jdbcType=VARCHAR},
      </if>
      <if test="functiondesc != null">
        #{functiondesc,jdbcType=VARCHAR},
      </if>
      <if test="storenumber != null">
        #{storenumber,jdbcType=INTEGER},
      </if>
      <if test="measuringunitname != null">
        #{measuringunitname,jdbcType=VARCHAR},
      </if>
      <if test="manufacturermodel != null">
        #{manufacturermodel,jdbcType=VARCHAR},
      </if>
      <if test="fromid != null">
        #{fromid,jdbcType=INTEGER},
      </if>
      <if test="functiondescnew != null">
        #{functiondescnew,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kobe.mybatis.model.ProductTempExample" resultType="java.lang.Long">
    select count(*) from product_temp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_temp
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.producttypeid != null">
        producttypeid = #{record.producttypeid,jdbcType=INTEGER},
      </if>
      <if test="record.brandid != null">
        brandid = #{record.brandid,jdbcType=INTEGER},
      </if>
      <if test="record.productname != null">
        productname = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.marketprice != null">
        marketprice = #{record.marketprice,jdbcType=DOUBLE},
      </if>
      <if test="record.salesprice != null">
        salesprice = #{record.salesprice,jdbcType=DOUBLE},
      </if>
      <if test="record.stockupdate != null">
        stockupdate = #{record.stockupdate,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.logoimg != null">
        logoimg = #{record.logoimg,jdbcType=VARCHAR},
      </if>
      <if test="record.functiondesc != null">
        functiondesc = #{record.functiondesc,jdbcType=VARCHAR},
      </if>
      <if test="record.storenumber != null">
        storenumber = #{record.storenumber,jdbcType=INTEGER},
      </if>
      <if test="record.measuringunitname != null">
        measuringunitname = #{record.measuringunitname,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturermodel != null">
        manufacturermodel = #{record.manufacturermodel,jdbcType=VARCHAR},
      </if>
      <if test="record.fromid != null">
        fromId = #{record.fromid,jdbcType=INTEGER},
      </if>
      <if test="record.functiondescnew != null">
        functiondescnew = #{record.functiondescnew,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_temp
    set id = #{record.id,jdbcType=INTEGER},
      producttypeid = #{record.producttypeid,jdbcType=INTEGER},
      brandid = #{record.brandid,jdbcType=INTEGER},
      productname = #{record.productname,jdbcType=VARCHAR},
      marketprice = #{record.marketprice,jdbcType=DOUBLE},
      salesprice = #{record.salesprice,jdbcType=DOUBLE},
      stockupdate = #{record.stockupdate,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=DOUBLE},
      logoimg = #{record.logoimg,jdbcType=VARCHAR},
      functiondesc = #{record.functiondesc,jdbcType=VARCHAR},
      storenumber = #{record.storenumber,jdbcType=INTEGER},
      measuringunitname = #{record.measuringunitname,jdbcType=VARCHAR},
      manufacturermodel = #{record.manufacturermodel,jdbcType=VARCHAR},
      fromId = #{record.fromid,jdbcType=INTEGER},
      functiondescnew = #{record.functiondescnew,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kobe.mybatis.model.ProductTemp">
    update product_temp
    <set>
      <if test="producttypeid != null">
        producttypeid = #{producttypeid,jdbcType=INTEGER},
      </if>
      <if test="brandid != null">
        brandid = #{brandid,jdbcType=INTEGER},
      </if>
      <if test="productname != null">
        productname = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="marketprice != null">
        marketprice = #{marketprice,jdbcType=DOUBLE},
      </if>
      <if test="salesprice != null">
        salesprice = #{salesprice,jdbcType=DOUBLE},
      </if>
      <if test="stockupdate != null">
        stockupdate = #{stockupdate,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="logoimg != null">
        logoimg = #{logoimg,jdbcType=VARCHAR},
      </if>
      <if test="functiondesc != null">
        functiondesc = #{functiondesc,jdbcType=VARCHAR},
      </if>
      <if test="storenumber != null">
        storenumber = #{storenumber,jdbcType=INTEGER},
      </if>
      <if test="measuringunitname != null">
        measuringunitname = #{measuringunitname,jdbcType=VARCHAR},
      </if>
      <if test="manufacturermodel != null">
        manufacturermodel = #{manufacturermodel,jdbcType=VARCHAR},
      </if>
      <if test="fromid != null">
        fromId = #{fromid,jdbcType=INTEGER},
      </if>
      <if test="functiondescnew != null">
        functiondescnew = #{functiondescnew,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kobe.mybatis.model.ProductTemp">
    update product_temp
    set producttypeid = #{producttypeid,jdbcType=INTEGER},
      brandid = #{brandid,jdbcType=INTEGER},
      productname = #{productname,jdbcType=VARCHAR},
      marketprice = #{marketprice,jdbcType=DOUBLE},
      salesprice = #{salesprice,jdbcType=DOUBLE},
      stockupdate = #{stockupdate,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
      logoimg = #{logoimg,jdbcType=VARCHAR},
      functiondesc = #{functiondesc,jdbcType=VARCHAR},
      storenumber = #{storenumber,jdbcType=INTEGER},
      measuringunitname = #{measuringunitname,jdbcType=VARCHAR},
      manufacturermodel = #{manufacturermodel,jdbcType=VARCHAR},
      fromId = #{fromid,jdbcType=INTEGER},
      functiondescnew = #{functiondescnew,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>